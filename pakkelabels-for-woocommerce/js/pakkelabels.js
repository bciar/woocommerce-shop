if (typeof PakkelabelsParams !== 'undefined') {
	var dataRoot = PakkelabelsParams.plugin_root; // Root path to data directory (Variable passed from mainfile)
	var selected_shop_header = PakkelabelsParams.selected_shop_header; //Text on selected shop div (Variable passed from mainfile)
	var error_message_zipcode = PakkelabelsParams.error_message_zipcode; //Error message for div (Variable passed from mainfile)
	var ajax_url = PakkelabelsParams.ajax_url;
	var error_no_cords_found = PakkelabelsParams.error_no_cords_found
	var markerIcon = ''; // Data marker icon
	var defaultLatlng = new google.maps.LatLng(55.9150835, 10.4713954); // Set default map properties
	var defaultZoom = 5; // Zoom level of the map
	var defaultMaxZoom = 18; // Max zoom level of the map
	var map; // Variable for map
	var infowindow; // Variable for marker info window
	var ms_marker_list = {};
	var bounds = ''; // Set bounds
	var myOptions = {
		zoom: defaultZoom,
		center: defaultLatlng,
		maxZoom: defaultMaxZoom,
		mapTypeId: google.maps.MapTypeId.Road
	}; // Option for google map object



	function getShopList(shipping_agent, zipcode)
	{

		var myZipcode = zipcode.trim();
		var zipcodeRegex = /^([0-9]{4})$/;

		if (zipcodeRegex.test(myZipcode) == true)
		{
			markerIcon =  shipping_agent + '.png';
			var data = {
				'action': 'pakkelabels_get_shop_list',
				'agent': shipping_agent,
				'zipcode': myZipcode,
			};
			jQuery.post(ajax_url, data, function(response){

				if(response){
					//console.log(response);
					var returned = JSON.parse(response);
					if(returned.status == false)
					{
						jQuery('#pakkelabel-modal').parent().find('.blockUI').remove();
						alert(returned.error);
					} else if(returned.status = true){
						jQuery('#pakkelabel-modal').modal({
							show: true,
							backdrop: true,
						});
						jQuery('#pakkelabel-map-wrapper').html(returned.map);
						jQuery('#pakkelabel-list-wrapper').html(returned.shoplist);
						jQuery('#pakkelabels-hidden-shop').html(returned.hidden_pakkelabels);
						markerFile = returned.shoplist_json;
						undefined_cords_markerFile = new Array();

						for (var key in markerFile) {
							if ( !markerFile[key].hasOwnProperty('latitude') || !markerFile[key].hasOwnProperty('longitude'))
							{
								undefined_cords_markerFile[key] = markerFile[key];
								delete markerFile[key];
							}
						}

						//loads the map and other map related stuff
						loadMap();

						//loads any markers that already have cords
						if(Object.keys(markerFile).length >= 1)
						{
							jQuery(markerFile).each(function()
							{
								loadMarker(this);
							})
						}

						//checks if their is any markers, that have no lng or lat that needs to be loaded
						if(Object.keys(undefined_cords_markerFile).length > 0)
						{
							load_markers_without_cords_from_streetname(undefined_cords_markerFile)
						}

						setTimeout(function()
						{
							jQuery('#pakkelabel-modal').parent().find('.blockUI').remove();
							google.maps.event.trigger(map, 'resize');
							map.fitBounds(bounds);
						}, 1000)


					}
				} else {
					jQuery('#pakkelabel-modal').parent().find('.blockUI').remove();
					alert(returned.error);
				}
			});
		}
		else
		{
			jQuery('#pakkelabel-modal').parent().find('.blockUI').remove();
			alert(error_message_zipcode)
		}
	}


	//Calls googles gmap api, and gets the cords for the streetnames from the shopilst generated by pakkelabels
	function load_markers_without_cords_from_streetname(aMarkerFile)
	{
		var geocoder = new google.maps.Geocoder();
		jQuery(aMarkerFile).each(function(key)
		{
			var address = this.address + ", " + this.city + ", " + this.zipcode
			var iShopid = this.number
			geocoder.geocode({'address': address}, function(results, status) {
				if (status === google.maps.GeocoderStatus.OK)
				{
					aMarkerFile[key].latitude = results[0].geometry.location.lat() + "";
					aMarkerFile[key].longitude = results[0].geometry.location.lng() + "";
					loadMarker(aMarkerFile[key]);

				}
				else
				{
					jQuery('[data-shopid="' + iShopid +'"] > div').append('<div class="no_cords_found">'+ error_no_cords_found +'</div>');
				}
			})
		})
		return aMarkerFile;
	}


	//loads the map and other map related stuff
	function loadMap()
	{
		// Create new map and place it in the target DIV
		map = new google.maps.Map(document.getElementById("map-canvas"), myOptions);
		// Create new info window for marker detail pop-up
		infowindow = new google.maps.InfoWindow();
		bounds = new google.maps.LatLngBounds();
	}


	//loades a single marker (used by loaderMarkers())
	function loadMarker(markerData)
	{
		// Create new marker location
		var myLatlng = new google.maps.LatLng(markerData['latitude'], markerData['longitude']);

		// Create new marker
		var marker = new google.maps.Marker({
			map: map,
			position: myLatlng,
			icon: dataRoot + '/images/' + markerIcon
		});

		// Add information to the marker
		google.maps.event.addListener(marker, 'click', (function (marker) {
			return function () {
				infowindow.setContent( "<strong>" + markerData['company_name'] + "</strong><br/>" + markerData['address'] + "<br/> " + markerData['city'] + " <br/> " + markerData['zipcode']);
				infowindow.open(map, marker);
				var shop_list = jQuery('.pakkelabels-shoplist > ul >li');
				shop_list.removeClass('selected').filter('[data-shopid=' + markerData['number'] + ']').trigger('click').addClass('selected');
				jQuery('#shop_radio_'+markerData['number']).trigger('click');

				//adds the shop information to the #selected_shop div
				jQuery('#selected_shop_header').html(selected_shop_header);
			}
		})(marker));
		bounds.extend(marker.position);
		//adds a marker to the list of markers
		ms_marker_list[markerData['number']] = marker;

		if(markerData['number'] == jQuery('#hidden_choosen_shop').attr('shopid'))
		{
			jQuery('li[data-shopid="'+markerData['number']+'"').trigger('click');
		};
	}


	//When a LI with a shop is pressed, the assosiated marker will have its informationwindow opened
	function li_addlistener_open_marker(eventElement)
	{
		//console.log(jQuery('#hidden_choosen_shop'));
		var event = eventElement;
		jQuery.each(ms_marker_list, function(key, value)
		{
			if (key == event['context'].getAttribute('data-shopid'))
			{
				jQuery('#hidden_choosen_shop').attr('shopid', event['context'].getAttribute('data-shopid'));
				//console.log(eventElement['context']['childNodes'][1])
				//adds the shop information to the #selected_shop div
				jQuery('#selected_shop_header').html(selected_shop_header);
				jQuery('#selected_shop_context').html(eventElement['context']['childNodes'][1].innerHTML);
				//adds the shop information to the marker corresponding with the shop
				infowindow.setContent(eventElement['context']['childNodes'][1].innerHTML);
				infowindow.open(map,value);
			}
		});
	}
}